{
  "version": 3,
  "sources": ["../../node_modules/@aws-crypto/sha256-js/node_modules/tslib/tslib.es6.js", "../../node_modules/@aws-crypto/sha256-js/src/constants.ts", "../../node_modules/@aws-crypto/sha256-js/src/RawSha256.ts", "../../node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js", "../../node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js", "../../node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js", "../../node_modules/@aws-crypto/sha256-js/node_modules/@aws-crypto/util/src/convertToBuffer.ts", "../../node_modules/@aws-crypto/sha256-js/node_modules/@aws-crypto/util/src/isEmptyData.ts", "../../node_modules/@aws-crypto/sha256-js/node_modules/@aws-crypto/util/src/numToUint8.ts", "../../node_modules/@aws-crypto/sha256-js/node_modules/@aws-crypto/util/src/uint32ArrayFrom.ts", "../../node_modules/@aws-crypto/sha256-js/node_modules/@aws-crypto/util/src/index.ts", "../../node_modules/@aws-crypto/sha256-js/src/jsSha256.ts", "../../node_modules/@aws-crypto/sha256-js/src/index.ts", "../../node_modules/@aws-amplify/auth/src/errors/AuthError.ts", "../../node_modules/@aws-amplify/auth/src/errors/utils/assertServiceError.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/clients/CognitoIdentityProvider/base.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/clients/CognitoIdentityProvider/index.ts", "../../node_modules/@aws-amplify/auth/src/errors/types/validation.ts", "../../node_modules/@aws-amplify/auth/src/common/AuthErrorStrings.ts", "../../node_modules/@aws-amplify/auth/src/errors/utils/assertValidationError.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/clients/CognitoIdentityProvider/utils.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/types/errors.ts", "../../node_modules/@aws-amplify/auth/src/errors/constants.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/types.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/internal/getCurrentUser.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/getCurrentUser.ts", "../../node_modules/@aws-amplify/auth/src/utils/getAuthUserAgentValue.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInStore.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/textEncoder/index.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/BigInteger/BigInteger.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateS.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/constants.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getBytesFromHex.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHexFromBytes.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromData.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHashFromHex.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getPaddedHex.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateU.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getHkdfKey.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomBytes.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getRandomString.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/calculate/calculateA.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getAuthenticationHelper.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getNowString.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/srp/getSignatureString.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/userContextData.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInHelpers.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/refreshAuthTokens.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/types.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/errorHelpers.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenStore.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signInWithRedirectStore.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/oAuthStore.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/inflightPromise.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/TokenOrchestrator.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/tokenProvider.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/tokenProvider/cacheTokens.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/dispatchSignedInHubEvent.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomAuth.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithCustomSRPAuth.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithSRP.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signInWithUserPassword.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signIn.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/autoSignIn.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/signUpHelpers.ts", "../../node_modules/@aws-amplify/auth/src/Errors.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/createOAuthError.ts", "../../node_modules/@aws-amplify/auth/src/types/Auth.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/validateState.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/completeOAuthFlow.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/getRedirectUrl.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/handleFailure.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/enableOAuthListener.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/apis/signOut.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/types.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdStore.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/utils.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/IdentityIdProvider.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/credentialsProvider.ts", "../../node_modules/@aws-amplify/auth/src/providers/cognito/credentialsProvider/index.ts", "../../node_modules/aws-amplify/src/initSingleton.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n", "import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n", "export const fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport const toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\n", "export function fromUtf8(input) {\n    return new TextEncoder().encode(input);\n}\nexport function toUtf8(input) {\n    return new TextDecoder(\"utf-8\").decode(input);\n}\n", "import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\nexport const fromUtf8 = (input) => typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\nexport const toUtf8 = (input) => typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@aws-sdk/util-utf8-browser\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function numToUint8(num: number) {\n  return new Uint8Array([\n    (num & 0xff000000) >> 24,\n    (num & 0x00ff0000) >> 16,\n    (num & 0x0000ff00) >> 8,\n    num & 0x000000ff,\n  ]);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n// IE 11 does not support Array.from, so we do it manually\nexport function uint32ArrayFrom(a_lookUpTable: Array<number>): Uint32Array {\n  if (!Uint32Array.from) {\n    const return_array = new Uint32Array(a_lookUpTable.length)\n    let a_index = 0\n    while (a_index < a_lookUpTable.length) {\n      return_array[a_index] = a_lookUpTable[a_index]\n      a_index += 1\n    }\n    return return_array\n  }\n  return Uint32Array.from(a_lookUpTable)\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport { convertToBuffer } from \"./convertToBuffer\";\nexport { isEmptyData } from \"./isEmptyData\";\nexport { numToUint8 } from \"./numToUint8\";\nexport {uint32ArrayFrom} from './uint32ArrayFrom';\n", "import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Checksum {\n  private readonly secret?: SourceData;\n  private hash: RawSha256;\n  private outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    this.secret = secret;\n    this.hash = new RawSha256();\n    this.reset();\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n\n  reset(): void {\n    this.hash = new RawSha256();\n    if (this.secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(this.secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n", "export * from \"./jsSha256\";\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, } from '@aws-amplify/core/internals/utils';\nexport class AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyErrorCode, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError';\nexport function assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getDnsSuffix, getRetryDecider, jitteredBackoff, parseJsonError, unauthenticatedHandler, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-idp';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const customURL = authConfig?.userPoolEndpoint;\n    const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n    return {\n        url: customURL ? new AmplifyUrl(customURL) : defaultURL,\n    };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { buildHttpRpcRequest, cognitoUserPoolTransferHandler, defaultConfig, getSharedHeaders, } from './base';\nconst buildUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst buildUserPoolDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            const body = await parseJsonBody(response);\n            return body;\n        }\n    };\n};\nconst handleEmptyResponseDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            return undefined;\n        }\n    };\n};\nexport const initiateAuth = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('InitiateAuth'), buildUserPoolDeserializer(), defaultConfig);\nexport const revokeToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RevokeToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const signUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SignUp'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmSignUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmSignUp'), buildUserPoolDeserializer(), defaultConfig);\nexport const forgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmForgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const respondToAuthChallenge = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RespondToAuthChallenge'), buildUserPoolDeserializer(), defaultConfig);\nexport const resendConfirmationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ResendConfirmationCode'), buildUserPoolDeserializer(), defaultConfig);\nexport const verifySoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifySoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const associateSoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('AssociateSoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nexport const setUserMFAPreference = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SetUserMFAPreference'), buildUserPoolDeserializer(), defaultConfig);\nexport const getUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUser'), buildUserPoolDeserializer(), defaultConfig);\nexport const changePassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ChangePassword'), buildUserPoolDeserializer(), defaultConfig);\nexport const confirmDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmDevice'), buildUserPoolDeserializer(), defaultConfig);\nexport const forgetDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgetDevice'), handleEmptyResponseDeserializer(), defaultConfig);\nexport const deleteUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUser'), handleEmptyResponseDeserializer(), defaultConfig);\nexport const getUserAttributeVerificationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUserAttributeVerificationCode'), buildUserPoolDeserializer(), defaultConfig);\nexport const globalSignOut = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GlobalSignOut'), buildUserPoolDeserializer(), defaultConfig);\nexport const updateUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\nexport const verifyUserAttribute = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifyUserAttribute'), buildUserPoolDeserializer(), defaultConfig);\nexport const updateDeviceStatus = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateDeviceStatus'), buildUserPoolDeserializer(), defaultConfig);\nexport const listDevices = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ListDevices'), buildUserPoolDeserializer(), defaultConfig);\nexport const deleteUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthValidationErrorCode } from '../errors/types/validation';\nexport const validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS or TOTP',\n        recoverySuggestion: 'Try to pass TOTP or SMS as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nexport var AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nexport var AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { validationErrorMap } from '../../common/AuthErrorStrings';\nimport { AuthError } from '../AuthError';\nexport function assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new AuthError({ name, message, recoverySuggestion });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nexport function getRegion(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nexport function getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n    AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n    AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nexport var ChangePasswordException;\n(function (ChangePasswordException) {\n    ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nexport var ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n    ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n    ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nexport var ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n    ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nexport var ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n    ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n    ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nexport var DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n    DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nexport var DeleteUserException;\n(function (DeleteUserException) {\n    DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nexport var ForgetDeviceException;\n(function (ForgetDeviceException) {\n    ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nexport var ForgotPasswordException;\n(function (ForgotPasswordException) {\n    ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nexport var GetUserException;\n(function (GetUserException) {\n    GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nexport var GetIdException;\n(function (GetIdException) {\n    GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nexport var GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n    GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n    GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nexport var GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n    GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nexport var GlobalSignOutException;\n(function (GlobalSignOutException) {\n    GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nexport var InitiateAuthException;\n(function (InitiateAuthException) {\n    InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n    InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n    InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nexport var ResendConfirmationException;\n(function (ResendConfirmationException) {\n    ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nexport var RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n    RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n    RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nexport var SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n    SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nexport var SignUpException;\n(function (SignUpException) {\n    SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nexport var UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n    UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n    UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nexport var VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n    VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n    VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nexport var VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n    VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n    VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nexport var UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n    UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nexport var ListDevicesException;\n(function (ListDevicesException) {\n    ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nexport const SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from './AuthError';\nexport const USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nexport const USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nexport const DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nexport const AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nexport const INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nexport const invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nexport const INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nexport const invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nexport const OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nexport const TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nexport const UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { DEVICE_METADATA_NOT_FOUND_EXCEPTION, TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nexport function isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nexport function assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport function assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nexport const oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nexport const tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nexport function assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nexport function assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nexport const OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types';\nexport const getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUserInternal } from './internal/getCurrentUser';\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport const getCurrentUser = async () => {\n    return getCurrentUserInternal(Amplify);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Category, getAmplifyUserAgent, } from '@aws-amplify/core/internals/utils';\nexport const getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n    category: Category.Auth,\n    action,\n    ...customUserAgentDetails,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst signInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SIGN_IN_SESSION':\n            return {\n                ...state,\n                signInSession: action.value,\n            };\n        case 'SET_SIGN_IN_STATE':\n            return {\n                ...action.value,\n            };\n        case 'SET_CHALLENGE_NAME':\n            return {\n                ...state,\n                challengeName: action.value,\n            };\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_INITIAL_STATE':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nfunction defaultState() {\n    return {\n        username: undefined,\n        challengeName: undefined,\n        signInSession: undefined,\n    };\n}\nconst createStore = reducer => {\n    let currentState = reducer(defaultState(), { type: 'SET_INITIAL_STATE' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nexport const signInStore = createStore(signInReducer);\nexport function setActiveSignInState(state) {\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_STATE',\n        value: state,\n    });\n}\nexport function cleanActiveSignInState() {\n    signInStore.dispatch({ type: 'SET_INITIAL_STATE' });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const textEncoder = {\n    convert(input) {\n        return new TextEncoder().encode(input);\n    },\n};\n", "/* eslint-disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\nexport default BigInteger;\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n    if (a != null)\n        this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n    return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n    while (--n >= 0) {\n        const v = x * this[i++] + w[j] + c;\n        c = Math.floor(v / 0x4000000);\n        w[j++] = v & 0x3ffffff;\n    }\n    return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n    const xl = x & 0x7fff;\n    const xh = x >> 15;\n    while (--n >= 0) {\n        let l = this[i] & 0x7fff;\n        const h = this[i++] >> 15;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n    const xl = x & 0x3fff;\n    const xh = x >> 14;\n    while (--n >= 0) {\n        let l = this[i] & 0x3fff;\n        const h = this[i++] >> 14;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n}\nelse {\n    // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = [];\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n    const c = BI_RC[s.charCodeAt(i)];\n    return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n    for (let i = this.t - 1; i >= 0; --i)\n        r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = x < 0 ? -1 : 0;\n    if (x > 0)\n        this[0] = x;\n    else if (x < -1)\n        this[0] = x + this.DV;\n    else\n        this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    const r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n    let k;\n    if (b === 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    this.t = 0;\n    this.s = 0;\n    let i = s.length;\n    let mi = false;\n    let sh = 0;\n    while (--i >= 0) {\n        const x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) === '-')\n                mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh === 0)\n            this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = x >> (this.DB - sh);\n        }\n        else\n            this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB)\n            sh -= this.DB;\n    }\n    this.clamp();\n    if (mi)\n        BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n    const c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)\n        --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n    if (this.s < 0)\n        return '-' + this.negate().toString(b);\n    let k;\n    if (b == 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    const km = (1 << k) - 1;\n    let d;\n    let m = false;\n    let r = '';\n    let i = this.t;\n    let p = this.DB - ((i * this.DB) % k);\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += int2char(d);\n        }\n    }\n    return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n    const r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n// (public) |this|\nfunction bnAbs() {\n    return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n    let r = this.s - a.s;\n    if (r != 0)\n        return r;\n    let i = this.t;\n    r = i - a.t;\n    if (r != 0)\n        return this.s < 0 ? -r : r;\n    while (--i >= 0)\n        if ((r = this[i] - a[i]) != 0)\n            return r;\n    return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    let r = 1;\n    let t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n    if (this.t <= 0)\n        return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n    let i;\n    for (i = this.t - 1; i >= 0; --i)\n        r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n    for (let i = n; i < this.t; ++i)\n        r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << cbs) - 1;\n    const ds = Math.floor(n / this.DB);\n    let c = (this.s << bs) & this.DM;\n    let i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    const ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (let i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0)\n        r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c < -1)\n        r[i++] = this.DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n    const x = this.abs();\n    const y = a.abs();\n    let i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s !== a.s)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n    const x = this.abs();\n    let i = (r.t = 2 * x.t);\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        const c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n            x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n    const pm = m.abs();\n    if (pm.t <= 0)\n        return;\n    const pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null)\n            q.fromInt(0);\n        if (r != null)\n            this.copyTo(r);\n        return;\n    }\n    if (r === null)\n        r = nbi();\n    const y = nbi();\n    const ts = this.s;\n    const ms = m.s;\n    const nsh = this.DB - nbits(pm[pm.t - 1]);\n    // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    const ys = y.t;\n    const y0 = y[ys - 1];\n    if (y0 === 0)\n        return;\n    const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n    const d1 = this.FV / yt;\n    const d2 = (1 << this.F1) / yt;\n    const e = 1 << this.F2;\n    let i = r.t;\n    let j = i - ys;\n    const t = q === null ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y);\n    // \"negative\" y so we can replace sub with am later\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        let qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n            // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd)\n                r.subTo(t, r);\n        }\n    }\n    if (q !== null) {\n        r.drShiftTo(ys, q);\n        if (ts !== ms)\n            BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0)\n        r.rShiftTo(nsh, r);\n    // Denormalize remainder\n    if (ts < 0)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n    const r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        a.subTo(r, r);\n    return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n    if (this.t < 1)\n        return 0;\n    const x = this[0];\n    if ((x & 1) === 0)\n        return 0;\n    let y = x & 3;\n    // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - ((x * y) % this.DV))) % this.DV;\n    // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n    return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n    let i = 0;\n    let c = 0;\n    const m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n    const r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n    const r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n    const r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n    const r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n    const r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        this.m.subTo(r, r);\n    return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n    const r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n    while (x.t <= this.mt2)\n        // pad x so am has enough room later\n        x[x.t++] = 0;\n    for (let i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        let j = x[i] & 0x7fff;\n        const u0 = (j * this.mpl +\n            (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) &\n            x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0)\n        x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n    let i = e.bitLength();\n    let k;\n    let r = nbv(1);\n    const z = new Montgomery(m);\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    // precomputation\n    const g = [];\n    let n = 3;\n    const k1 = k - 1;\n    const km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        const g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n    let j = e.t - 1;\n    let w;\n    let is1 = true;\n    let r2 = nbi();\n    let t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (this.DB + i - k1);\n        }\n        n = k;\n        while ((w & 1) === 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) {\n            // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    const result = z.revert(r);\n    callback(null, result);\n    return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nexport const calculateS = async ({ a, g, k, x, B, N, U, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(x, N, (outerErr, outerResult) => {\n            if (outerErr) {\n                reject(outerErr);\n                return;\n            }\n            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n                if (innerErr) {\n                    reject(innerErr);\n                    return;\n                }\n                resolve(innerResult.mod(N));\n            });\n        });\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nexport const SHORT_TO_HEX = {};\nexport const HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HEX_TO_SHORT } from './constants';\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nexport const getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SHORT_TO_HEX } from './constants';\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nexport const getHexFromBytes = (bytes) => {\n    let out = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes';\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromData = (data) => {\n    const sha256 = new Sha256();\n    sha256.update(data);\n    const hashedData = sha256.digestSync();\n    const hashHexFromUint8 = getHexFromBytes(hashedData);\n    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBytesFromHex } from './getBytesFromHex';\nimport { getHashFromData } from './getHashFromData';\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nexport const getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from './BigInteger';\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nexport const getPaddedHex = (bigInt) => {\n    if (!(bigInt instanceof BigInteger)) {\n        throw new Error('Not a BigInteger');\n    }\n    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n    let hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n    if (isNegative) {\n        /* Flip the bits of the representation */\n        const invertedNibbles = hexStr\n            .split('')\n            .map((x) => {\n            const invertedNibble = ~parseInt(x, 16) & 0xf;\n            return '0123456789ABCDEF'.charAt(invertedNibble);\n        })\n            .join('');\n        /* After flipping the bits, add one to get the 2's complement representation */\n        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n        hexStr = flippedBitsBI.toString(16);\n        /*\n        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n\n        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n        without changing the represented value.\n\n        This only happens in the case when the input is 80...00\n        */\n        if (hexStr.toUpperCase().startsWith('FF8')) {\n            hexStr = hexStr.substring(2);\n        }\n    }\n    return hexStr;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getPaddedHex } from '../getPaddedHex';\n/**\n * @internal\n */\nexport const calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nexport const getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { WordArray } from '@aws-amplify/core/internals/utils';\nimport { getBytesFromHex } from './getBytesFromHex';\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nexport const getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nexport const getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../../errors/AuthError';\nimport { textEncoder } from '../../textEncoder';\nimport { BigInteger } from '../BigInteger';\nimport { calculateS, calculateU } from '../calculate';\nimport { getBytesFromHex } from '../getBytesFromHex';\nimport { getHashFromData } from '../getHashFromData';\nimport { getHashFromHex } from '../getHashFromHex';\nimport { getHexFromBytes } from '../getHexFromBytes';\nimport { getHkdfKey } from '../getHkdfKey';\nimport { getPaddedHex } from '../getPaddedHex';\nimport { getRandomBytes } from '../getRandomBytes';\nimport { getRandomString } from '../getRandomString';\n/** @class */\nexport default class AuthenticationHelper {\n    constructor({ userPoolName, a, g, A, N, }) {\n        this.encoder = textEncoder;\n        this.userPoolName = userPoolName;\n        this.a = a;\n        this.g = g;\n        this.A = A;\n        this.N = N;\n        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n    }\n    /**\n     * @returns {string} Generated random value included in password hash.\n     */\n    getRandomPassword() {\n        if (!this.randomPassword) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerRandomPassword',\n                message: 'random password is empty',\n            });\n        }\n        return this.randomPassword;\n    }\n    /**\n     * @returns {string} Generated random value included in devices hash.\n     */\n    getSaltToHashDevices() {\n        if (!this.saltToHashDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegersaltToHashDevices',\n                message: 'saltToHashDevices is empty',\n            });\n        }\n        return this.saltToHashDevices;\n    }\n    /**\n     * @returns {string} Value used to verify devices.\n     */\n    getVerifierDevices() {\n        if (!this.verifierDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerVerifierDevices',\n                message: 'verifyDevices is empty',\n            });\n        }\n        return this.verifierDevices;\n    }\n    /**\n     * Generate salts and compute verifier.\n     *\n     * @param {string} deviceGroupKey Devices to generate verifier for.\n     * @param {string} username User to generate verifier for.\n     *\n     * @returns {Promise<void>}\n     */\n    async generateHashDevice(deviceGroupKey, username) {\n        this.randomPassword = getRandomString();\n        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n        const hashedString = getHashFromData(combinedString);\n        const hexRandom = getHexFromBytes(getRandomBytes(16));\n        // The random hex will be unambiguously represented as a postive integer\n        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n        return new Promise((resolve, reject) => {\n            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                this.verifierDevices = getPaddedHex(result);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Calculates the final HKDF key based on computed S value, computed U value and the key\n     *\n     * @param {String} username Username.\n     * @param {String} password Password.\n     * @param {AuthBigInteger} B Server B value.\n     * @param {AuthBigInteger} salt Generated salt.\n     */\n    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n            throw new Error('B cannot be zero.');\n        }\n        const U = calculateU({\n            A: this.A,\n            B: serverBValue,\n        });\n        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n        const usernamePasswordHash = getHashFromData(usernamePassword);\n        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n        const S = await calculateS({\n            a: this.a,\n            g: this.g,\n            k: this.k,\n            x,\n            B: serverBValue,\n            N: this.N,\n            U,\n        });\n        const context = this.encoder.convert('Caldera Derived Key');\n        const spacer = this.encoder.convert(String.fromCharCode(1));\n        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n        info.set(context, 0);\n        info.set(spacer, context.byteLength);\n        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n        return hkdfKey;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInteger } from '../BigInteger';\n/**\n * @internal\n */\nexport const calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthenticationHelper } from './AuthenticationHelper';\nimport { BigInteger } from './BigInteger';\nimport { calculateA } from './calculate';\nimport { INIT_N } from './constants';\nimport { getHexFromBytes } from './getHexFromBytes';\nimport { getRandomBytes } from './getRandomBytes';\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nexport const getAuthenticationHelper = async (userPoolName) => {\n    const N = new BigInteger(INIT_N, 16);\n    const g = new BigInteger('2', 16);\n    const a = generateRandomBigInteger();\n    const A = await calculateA({ a, g, N });\n    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n    // This will be interpreted as a postive 128-bit integer\n    const hexRandom = getHexFromBytes(getRandomBytes(128));\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n    return new BigInteger(hexRandom, 16);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nexport const getNowString = () => {\n    const now = new Date();\n    const weekDay = WEEK_NAMES[now.getUTCDay()];\n    const month = MONTH_NAMES[now.getUTCMonth()];\n    const day = now.getUTCDate();\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n        hours = `0${hours}`;\n    }\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    const year = now.getUTCFullYear();\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n    return dateNow;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Decoder, base64Encoder, } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder';\nexport const getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\n    const rawData = base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function getUserContextData({ username, userPoolId, userPoolClientId, }) {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    const amazonCognitoAdvancedSecurityData = window\n        .AmazonCognitoAdvancedSecurityData;\n    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n        return undefined;\n    }\n    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n    if (advancedSecurityData) {\n        const userContextData = {\n            EncodedData: advancedSecurityData,\n        };\n        return userContextData;\n    }\n    return {};\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { AmplifyUrl, AuthAction, assertTokenProviderConfig, base64Encoder, getDeviceName, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { InitiateAuthException } from '../types/errors';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { signInStore } from './signInStore';\nimport { associateSoftwareToken, confirmDevice, initiateAuth, respondToAuthChallenge, verifySoftwareToken, } from './clients/CognitoIdentityProvider';\nimport { getRegion } from './clients/CognitoIdentityProvider/utils';\nimport { assertDeviceMetadata } from './types';\nimport { getAuthenticationHelper, getBytesFromHex, getNowString, getSignatureString, } from './srp';\nimport { BigInteger } from './srp/BigInteger';\nimport { getUserContextData } from './userContextData';\nconst USER_ATTRIBUTES = 'userAttributes.';\nexport async function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: challengeResponse,\n    };\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'CUSTOM_CHALLENGE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    }\n    return response;\n}\nexport async function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    const { Session } = await verifySoftwareToken({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        UserCode: challengeResponse,\n        Session: session,\n        FriendlyDeviceName: deviceName,\n    });\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_SESSION',\n        value: Session,\n    });\n    const jsonReq = {\n        ChallengeName: 'MFA_SETUP',\n        ChallengeResponses: challengeResponses,\n        Session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n    };\n    return respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReq);\n}\nexport async function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    assertValidationError(challengeResponse === 'TOTP' || challengeResponse === 'SMS', AuthValidationErrorCode.IncorrectMFAMethod);\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: mapMfaType(challengeResponse),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SELECT_MFA_TYPE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleSMSMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        SMS_MFA_CODE: challengeResponse,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SMS_MFA',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleSoftwareTokenMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        SOFTWARE_TOKEN_MFA_CODE: challengeResponse,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SOFTWARE_TOKEN_MFA',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        ...createAttributes(requiredAttributes),\n        NEW_PASSWORD: challengeResponse,\n        USERNAME: username,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nexport async function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId } = config;\n    const authParameters = {\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_PASSWORD_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ??\n        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n        username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_SRP_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const resp = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nexport async function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId } = config;\n    const authParameters = {\n        USERNAME: username,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    assertTokenProviderConfig(config);\n    const { userPoolId, userPoolClientId } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        CHALLENGE_NAME: 'SRP_A',\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const { ChallengeParameters: challengeParameters, Session: session } = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nasync function handleDeviceSRPAuth({ username, config, clientMetadata, session, tokenOrchestrator, }) {\n    const { userPoolId } = config;\n    const clientId = config.userPoolClientId;\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n    const challengeResponses = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        DEVICE_KEY: deviceMetadata.deviceKey,\n    };\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: clientId,\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n    };\n    const { ChallengeParameters: respondedChallengeParameters, Session } = await respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReqResponseChallenge);\n    return handleDevicePasswordVerifier(username, respondedChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, { userPoolId, userPoolClientId }, tokenOrchestrator) {\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const { deviceKey } = deviceMetadata;\n    const { deviceGroupKey } = deviceMetadata;\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username: deviceMetadata.deviceKey,\n        password: deviceMetadata.randomPassword,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: challengeParameters?.USERNAME ?? username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username: deviceKey,\n            userPoolName: deviceGroupKey,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n        DEVICE_KEY: deviceKey,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: userPoolClientId,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        UserContextData,\n    };\n    return respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReqResponseChallenge);\n}\nexport async function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const username = challengeParameters?.USER_ID_FOR_SRP;\n    if (!username)\n        throw new AuthError({\n            name: 'EmptyUserIdForSRPException',\n            message: 'USER_ID_FOR_SRP was not found in challengeParameters',\n        });\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username,\n        password,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username,\n            userPoolName,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses.DEVICE_KEY = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReqResponseChallenge);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nexport async function getSignInResult(params) {\n    const { challengeName, challengeParameters } = params;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    switch (challengeName) {\n        case 'CUSTOM_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n                    additionalInfo: challengeParameters,\n                },\n            };\n        case 'MFA_SETUP': {\n            const { signInSession, username } = signInStore.getState();\n            if (!isMFATypeEnabled(challengeParameters, 'TOTP'))\n                throw new AuthError({\n                    name: AuthErrorCodes.SignInException,\n                    message: `Cannot initiate MFA setup from available types: ${getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP))}`,\n                });\n            const { Session, SecretCode: secretCode } = await associateSoftwareToken({ region: getRegion(authConfig.userPoolId) }, {\n                Session: signInSession,\n            });\n            signInStore.dispatch({\n                type: 'SET_SIGN_IN_SESSION',\n                value: Session,\n            });\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n                    totpSetupDetails: getTOTPSetupDetails(secretCode, username),\n                },\n            };\n        }\n        case 'NEW_PASSWORD_REQUIRED':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n                    missingAttributes: parseAttributes(challengeParameters.requiredAttributes),\n                },\n            };\n        case 'SELECT_MFA_TYPE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n                    allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE)),\n                },\n            };\n        case 'SMS_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'SOFTWARE_TOKEN_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n                },\n            };\n        case 'ADMIN_NO_SRP_AUTH':\n            break;\n        case 'DEVICE_PASSWORD_VERIFIER':\n            break;\n        case 'DEVICE_SRP_AUTH':\n            break;\n        case 'PASSWORD_VERIFIER':\n            break;\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: 'An error occurred during the sign in process. ' +\n            `${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function getTOTPSetupDetails(secretCode, username) {\n    return {\n        sharedSecret: secretCode,\n        getSetupUri: (appName, accountName) => {\n            const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n            return new AmplifyUrl(totpUri);\n        },\n    };\n}\nexport function getSignInResultFromError(errorName) {\n    if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'RESET_PASSWORD' },\n        };\n    }\n    else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'CONFIRM_SIGN_UP' },\n        };\n    }\n}\nexport function parseAttributes(attributes) {\n    if (!attributes)\n        return [];\n    const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n    return parsedAttributes;\n}\nexport function createAttributes(attributes) {\n    if (!attributes)\n        return {};\n    const newAttributes = {};\n    Object.entries(attributes).forEach(([key, value]) => {\n        if (value)\n            newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n    });\n    return newAttributes;\n}\nexport async function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n    const userAttributes = options?.userAttributes;\n    const deviceName = options?.friendlyDeviceName;\n    switch (challengeName) {\n        case 'SMS_MFA':\n            return handleSMSMFAChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'SELECT_MFA_TYPE':\n            return handleSelectMFATypeChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'MFA_SETUP':\n            return handleMFASetupChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                deviceName,\n                config,\n            });\n        case 'NEW_PASSWORD_REQUIRED':\n            return handleCompleteNewPasswordChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                requiredAttributes: userAttributes,\n                config,\n            });\n        case 'CUSTOM_CHALLENGE':\n            return retryOnResourceNotFoundException(handleCustomChallenge, [\n                {\n                    challengeResponse,\n                    clientMetadata,\n                    session,\n                    username,\n                    config,\n                    tokenOrchestrator,\n                },\n            ], username, tokenOrchestrator);\n        case 'SOFTWARE_TOKEN_MFA':\n            return handleSoftwareTokenMFAChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `An error occurred during the sign in process. \n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nexport function mapMfaType(mfa) {\n    let mfaType = 'SMS_MFA';\n    if (mfa === 'TOTP')\n        mfaType = 'SOFTWARE_TOKEN_MFA';\n    return mfaType;\n}\nexport function getMFAType(type) {\n    if (type === 'SMS_MFA')\n        return 'SMS';\n    if (type === 'SOFTWARE_TOKEN_MFA')\n        return 'TOTP';\n    // TODO: log warning for unknown MFA type\n}\nexport function getMFATypes(types) {\n    if (!types)\n        return undefined;\n    return types.map(getMFAType).filter(Boolean);\n}\nexport function parseMFATypes(mfa) {\n    if (!mfa)\n        return [];\n    return JSON.parse(mfa);\n}\nexport function isMFATypeEnabled(challengeParams, mfaType) {\n    const { MFAS_CAN_SETUP } = challengeParams;\n    const mfaTypes = getMFATypes(parseMFATypes(MFAS_CAN_SETUP));\n    if (!mfaTypes)\n        return false;\n    return mfaTypes.includes(mfaType);\n}\nexport async function assertUserNotAuthenticated() {\n    let authUser;\n    try {\n        authUser = await getCurrentUser();\n    }\n    catch (error) { }\n    if (authUser && authUser.userId && authUser.username) {\n        throw new AuthError({\n            name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n            message: 'There is already a signed in user.',\n            recoverySuggestion: 'Call signOut before calling signIn again.',\n        });\n    }\n}\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nexport async function getNewDeviceMetatada(userPoolId, newDeviceMetadata, accessToken) {\n    if (!newDeviceMetadata)\n        return undefined;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const deviceKey = newDeviceMetadata?.DeviceKey;\n    const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n    try {\n        await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n    }\n    catch (errGenHash) {\n        // TODO: log error here\n        return undefined;\n    }\n    const deviceSecretVerifierConfig = {\n        Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n        PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices())),\n    };\n    const randomPassword = authenticationHelper.getRandomPassword();\n    try {\n        await confirmDevice({ region: getRegion(userPoolId) }, {\n            AccessToken: accessToken,\n            DeviceName: await getDeviceName(),\n            DeviceKey: newDeviceMetadata?.DeviceKey,\n            DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        });\n        return {\n            deviceKey,\n            deviceGroupKey,\n            randomPassword,\n        };\n    }\n    catch (error) {\n        // TODO: log error here\n        return undefined;\n    }\n}\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nexport async function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n    try {\n        return await func(...args);\n    }\n    catch (error) {\n        if (error instanceof AuthError &&\n            error.name === 'ResourceNotFoundException' &&\n            error.message.includes('Device does not exist.')) {\n            await tokenOrchestrator.clearDeviceMetadata(username);\n            return func(...args);\n        }\n        throw error;\n    }\n}\nexport function setActiveSignInUsername(username) {\n    const { dispatch } = signInStore;\n    dispatch({ type: 'SET_USERNAME', value: username });\n}\nexport function getActiveSignInUsername(username) {\n    const state = signInStore.getState();\n    return state.username ?? username;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig, deDupeAsyncFunction, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { initiateAuth } from '../utils/clients/CognitoIdentityProvider';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { assertAuthTokensWithRefreshToken } from '../utils/types';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getUserContextData } from './userContextData';\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const region = getRegion(authConfig.Cognito.userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n        REFRESH_TOKEN: refreshTokenString,\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n        AuthParameters.DEVICE_KEY = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId: authConfig.Cognito.userPoolId,\n        userPoolClientId: authConfig.Cognito.userPoolClientId,\n    });\n    const { AuthenticationResult } = await initiateAuth({ region }, {\n        ClientId: authConfig?.Cognito?.userPoolClientId,\n        AuthFlow: 'REFRESH_TOKEN_AUTH',\n        AuthParameters,\n        UserContextData,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: refreshTokenString,\n        username,\n    };\n};\nexport const refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nexport const refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n", "export const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nexport var TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nexport const assert = createAssertionFunction(tokenValidationErrorMap);\n", "import { assertTokenProviderConfig, decodeJWT, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { AuthTokenStorageKeys, } from './types';\nimport { TokenProviderErrorCode, assert } from './errorHelpers';\nexport class DefaultTokenStore {\n    constructor() {\n        this.name = 'CognitoIdentityServiceProvider'; // To be backwards compatible with V5, no migration needed\n    }\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        await this.clearTokens();\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(this.name, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${this.name}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n}\nexport const createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nexport function getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { OAuthStorageKeys } from './types';\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nexport class DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore';\nexport const oAuthStore = new DefaultOAuthStore(defaultStorage);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nexport const addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nexport const resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, assertTokenProviderConfig, isBrowser, isTokenExpired, } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { AuthError } from '../../../errors/AuthError';\nimport { oAuthStore } from '../utils/oauth/oAuthStore';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise';\nexport class TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.message !== 'Network error') {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage, } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens';\nimport { DefaultTokenStore } from './TokenStore';\nimport { TokenOrchestrator } from './TokenOrchestrator';\nexport class CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider';\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nexport const cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nexport const { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider';\nexport async function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { getCurrentUser } from '../apis/getCurrentUser';\nimport { UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, } from '../../../errors/constants';\nimport { AuthError } from '../../../errors/AuthError';\nexport const ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nexport const dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError, handleCustomAuthFlowWithoutSRP, retryOnResourceNotFoundException, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomAuth(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITHOUT_SRP',\n    };\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n    try {\n        const { ChallengeName: retriedChallengeName, ChallengeParameters: retiredChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retriedChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retriedChallengeName,\n            challengeParameters: retiredChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError, handleCustomSRPAuthFlow, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithCustomSRPAuth(input) {\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITH_SRP',\n    };\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError, handleUserSRPAuthFlow, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithSRP(input) {\n    const { username, password } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_SRP_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = input.options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: handledChallengeName, ChallengeParameters: handledChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: handledChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: handledChallengeName,\n            challengeParameters: handledChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError';\nimport { getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError, handleUserPasswordAuthFlow, retryOnResourceNotFoundException, } from '../utils/signInHelpers';\nimport { cleanActiveSignInState, setActiveSignInState, } from '../utils/signInStore';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent';\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signInWithUserPassword(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_PASSWORD_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName: retiredChallengeName, ChallengeParameters: retriedChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: retiredChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                ...AuthenticationResult,\n                username: activeUsername,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: retiredChallengeName,\n            challengeParameters: retriedChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers';\nimport { signInWithCustomAuth } from './signInWithCustomAuth';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth';\nimport { signInWithSRP } from './signInWithSRP';\nimport { signInWithUserPassword } from './signInWithUserPassword';\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signIn(input) {\n    const authFlowType = input.options?.authFlowType;\n    await assertUserNotAuthenticated();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return signInWithSRP(input);\n        case 'USER_PASSWORD_AUTH':\n            return signInWithUserPassword(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return signInWithCustomAuth(input);\n        case 'CUSTOM_WITH_SRP':\n            return signInWithCustomSRPAuth(input);\n        default:\n            return signInWithSRP(input);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../errors/AuthError';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants';\nconst initialAutoSignIn = async () => {\n    throw new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n    });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\n// TODO(Eslint): can this be refactored not using `let` on exported member?\n// eslint-disable-next-line import/no-mutable-exports\nexport let autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nexport function setAutoSignIn(callback) {\n    autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nexport function resetAutoSignIn() {\n    autoSignIn = initialAutoSignIn;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { HubInternal } from '@aws-amplify/core/internals/utils';\nimport { signIn } from '../apis/signIn';\nimport { AuthError } from '../../../errors/AuthError';\nimport { resetAutoSignIn, setAutoSignIn } from '../apis/autoSignIn';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants';\nconst MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\nexport function handleCodeAutoSignIn(signInInput) {\n    const stopHubListener = HubInternal.listen('auth-internal', async ({ payload }) => {\n        switch (payload.event) {\n            case 'confirmSignUp': {\n                const response = payload.data;\n                if (response?.isSignUpComplete) {\n                    HubInternal.dispatch('auth-internal', {\n                        event: 'autoSignIn',\n                    });\n                    setAutoSignIn(autoSignInWithCode(signInInput));\n                    stopHubListener();\n                }\n            }\n        }\n    });\n    // This will stop the listener if confirmSignUp is not resolved.\n    const timeOutId = setTimeout(() => {\n        stopHubListener();\n        setAutoSignInStarted(false);\n        clearTimeout(timeOutId);\n        resetAutoSignIn();\n    }, MAX_AUTOSIGNIN_POLLING_MS);\n}\nfunction debounce(fun, delay) {\n    let timer;\n    return (args) => {\n        if (!timer) {\n            fun(...args);\n        }\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            timer = undefined;\n        }, delay);\n    };\n}\nfunction handleAutoSignInWithLink(signInInput, resolve, reject) {\n    const start = Date.now();\n    const autoSignInPollingIntervalId = setInterval(async () => {\n        const elapsedTime = Date.now() - start;\n        const maxTime = MAX_AUTOSIGNIN_POLLING_MS;\n        if (elapsedTime > maxTime) {\n            clearInterval(autoSignInPollingIntervalId);\n            setAutoSignInStarted(false);\n            reject(new AuthError({\n                name: AUTO_SIGN_IN_EXCEPTION,\n                message: 'The account was not confirmed on time.',\n                recoverySuggestion: 'Try to verify your account by clicking the link sent your email or phone and then login manually.',\n            }));\n            resetAutoSignIn();\n        }\n        else {\n            try {\n                const signInOutput = await signIn(signInInput);\n                if (signInOutput.nextStep.signInStep !== 'CONFIRM_SIGN_UP') {\n                    resolve(signInOutput);\n                    clearInterval(autoSignInPollingIntervalId);\n                    setAutoSignInStarted(false);\n                    resetAutoSignIn();\n                }\n            }\n            catch (error) {\n                clearInterval(autoSignInPollingIntervalId);\n                setAutoSignInStarted(false);\n                reject(error);\n                resetAutoSignIn();\n            }\n        }\n    }, 5000);\n}\nconst debouncedAutoSignInWithLink = debounce(handleAutoSignInWithLink, 300);\nconst debouncedAutoSignWithCodeOrUserConfirmed = debounce(handleAutoSignInWithCodeOrUserConfirmed, 300);\nlet autoSignInStarted = false;\nlet usernameUsedForAutoSignIn;\nexport function setUsernameUsedForAutoSignIn(username) {\n    usernameUsedForAutoSignIn = username;\n}\nexport function isAutoSignInUserUsingConfirmSignUp(username) {\n    return usernameUsedForAutoSignIn === username;\n}\nexport function isAutoSignInStarted() {\n    return autoSignInStarted;\n}\nexport function setAutoSignInStarted(value) {\n    if (value === false) {\n        setUsernameUsedForAutoSignIn(undefined);\n    }\n    autoSignInStarted = value;\n}\nexport function isSignUpComplete(output) {\n    return !!output.UserConfirmed;\n}\nexport function autoSignInWhenUserIsConfirmedWithLink(signInInput) {\n    return async () => {\n        return new Promise((resolve, reject) => {\n            debouncedAutoSignInWithLink([signInInput, resolve, reject]);\n        });\n    };\n}\nasync function handleAutoSignInWithCodeOrUserConfirmed(signInInput, resolve, reject) {\n    try {\n        const output = await signIn(signInInput);\n        resolve(output);\n        resetAutoSignIn();\n    }\n    catch (error) {\n        reject(error);\n        resetAutoSignIn();\n    }\n}\nfunction autoSignInWithCode(signInInput) {\n    return async () => {\n        return new Promise((resolve, reject) => {\n            debouncedAutoSignWithCodeOrUserConfirmed([signInInput, resolve, reject]);\n        });\n    };\n}\nexport const autoSignInUserConfirmed = autoSignInWithCode;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: delete this module when the Auth class is removed.\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\nconst logger = new ConsoleLogger('AuthError');\nexport class AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nexport class NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nexport const authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { authErrorMessages } from '../../../../Errors';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings';\nimport { AuthError } from '../../../../errors/AuthError';\nexport const createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport var AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthError } from '../../../../errors/AuthError';\nimport { AuthErrorTypes } from '../../../../types/Auth';\nimport { oAuthStore } from './oAuthStore';\nexport const flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nexport const validationFailedMessage = 'An error occurred while validating the state.';\nexport const validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nexport const validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AMPLIFY_SYMBOL, AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, } from '@aws-amplify/core/internals/utils';\nimport { Hub, decodeJWT } from '@aws-amplify/core';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent';\nimport { createOAuthError } from './createOAuthError';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nimport { validateState } from './validateState';\nimport { oAuthStore } from './oAuthStore';\nexport const completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token: refreshToken, id_token, error, error_message: errorMessage, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(errorMessage ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refreshToken,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n    clearHistory(redirectUri);\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { invalidOriginException, invalidRedirectException, } from '../../../../errors/constants';\n/** @internal */\nexport function getRedirectUrl(redirects) {\n    const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n        redirects?.find(isTheSameDomain);\n    const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n    if (redirectUrlFromTheSameOrigin) {\n        return redirectUrlFromTheSameOrigin;\n    }\n    else if (redirectUrlFromDifferentOrigin) {\n        throw invalidOriginException;\n    }\n    throw invalidRedirectException;\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(String(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore';\nimport { resolveAndClearInflightPromises } from './inflightPromise';\nexport const handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { oAuthStore } from './oAuthStore';\nimport { completeOAuthFlow } from './completeOAuthFlow';\nimport { getRedirectUrl } from './getRedirectUrl';\nimport { handleFailure } from './handleFailure';\nexport const attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { ADD_OAUTH_LISTENER, isBrowser, } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow';\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, ConsoleLogger, Hub, clearCredentials, defaultStorage, } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL, AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { tokenOrchestrator } from '../tokenProvider';\nimport { globalSignOut as globalSignOutClient, revokeToken, } from '../utils/clients/CognitoIdentityProvider';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { assertAuthTokens, assertAuthTokensWithRefreshToken, } from '../utils/types';\nimport { handleOAuthSignOut } from '../utils/oauth';\nimport { DefaultOAuthStore } from '../utils/signInWithRedirectStore';\nimport { AuthError } from '../../../errors/AuthError';\nimport { OAUTH_SIGNOUT_EXCEPTION } from '../../../errors/constants';\nconst logger = new ConsoleLogger('Auth');\n/**\n * Signs a user out\n *\n * @param input - The SignOutInput object\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function signOut(input) {\n    const cognitoConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(cognitoConfig);\n    if (input?.global) {\n        await globalSignOut(cognitoConfig);\n    }\n    else {\n        await clientSignOut(cognitoConfig);\n    }\n    let hasOAuthConfig;\n    try {\n        assertOAuthConfig(cognitoConfig);\n        hasOAuthConfig = true;\n    }\n    catch (err) {\n        hasOAuthConfig = false;\n    }\n    if (hasOAuthConfig) {\n        const oAuthStore = new DefaultOAuthStore(defaultStorage);\n        oAuthStore.setAuthConfig(cognitoConfig);\n        const { type } = (await handleOAuthSignOut(cognitoConfig, oAuthStore)) ?? {};\n        if (type === 'error') {\n            throw new AuthError({\n                name: OAUTH_SIGNOUT_EXCEPTION,\n                message: 'An error occurred when attempting to log out from OAuth provider.',\n            });\n        }\n    }\n    else {\n        // complete sign out\n        tokenOrchestrator.clearTokens();\n        await clearCredentials();\n        Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n    }\n}\nasync function clientSignOut(cognitoConfig) {\n    try {\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokensWithRefreshToken(authTokens);\n        if (isSessionRevocable(authTokens.accessToken)) {\n            await revokeToken({\n                region: getRegion(cognitoConfig.userPoolId),\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n            }, {\n                ClientId: cognitoConfig.userPoolClientId,\n                Token: authTokens.refreshToken,\n            });\n        }\n    }\n    catch (err) {\n        // this shouldn't throw\n        logger.debug('Client signOut error caught but will proceed with token removal');\n    }\n}\nasync function globalSignOut(cognitoConfig) {\n    try {\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokens(authTokens);\n        await globalSignOutClient({\n            region: getRegion(cognitoConfig.userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n        }, {\n            AccessToken: authTokens.accessToken.toString(),\n        });\n    }\n    catch (err) {\n        // it should not throw\n        logger.debug('Global signOut error caught but will proceed with token removal');\n    }\n}\nconst isSessionRevocable = (token) => !!token?.payload?.origin_jti;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport const IdentityIdStorageKeys = {\n    identityId: 'identityId',\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore';\nimport { IdentityIdStorageKeys } from './types';\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nexport class DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (storedIdentityId) {\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            this.keyValueStorage.removeItem(this._authKeys.identityId);\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nexport function formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getId } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoIdentityIdProvider');\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nexport async function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    let identityId = await identityIdStore.loadIdentityId();\n    // Tokens are available so return primary identityId\n    if (tokens) {\n        // If there is existing primary identityId in-memory return that\n        if (identityId && identityId.type === 'primary') {\n            return identityId.id;\n        }\n        else {\n            const logins = tokens.idToken\n                ? formLoginsMap(tokens.idToken.toString())\n                : {};\n            const generatedIdentityId = await generateIdentityId(logins, authConfig);\n            if (identityId && identityId.id === generatedIdentityId) {\n                logger.debug(`The guest identity ${identityId.id} has become the primary identity.`);\n            }\n            identityId = {\n                id: generatedIdentityId,\n                type: 'primary',\n            };\n        }\n    }\n    else {\n        // If there is existing guest identityId cached return that\n        if (identityId && identityId.type === 'guest') {\n            return identityId.id;\n        }\n        else {\n            identityId = {\n                id: await generateIdentityId({}, authConfig),\n                type: 'guest',\n            };\n        }\n    }\n    // Store in-memory or local storage depending on guest or primary identityId\n    identityIdStore.storeIdentityId(identityId);\n    return identityId.id;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    const idResult = \n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    (await getId({\n        region,\n    }, {\n        IdentityPoolId: identityPoolId,\n        Logins: logins,\n    })).IdentityId;\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger, getCredentialsForIdentity, } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig, } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError';\nimport { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils';\nimport { assertIdTokenInAuthTokens } from '../utils/types';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider';\nimport { formLoginsMap } from './utils';\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nexport class CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const { tokens } = getCredentialsOptions;\n        const { authConfig } = getCredentialsOptions;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const { forceRefresh } = getCredentialsOptions;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n            Logins: logins,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'primary',\n                });\n            }\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { defaultStorage } from '@aws-amplify/core';\nimport { DefaultIdentityIdStore } from './IdentityIdStore';\nimport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider';\n/**\n * Cognito specific implmentation of the CredentialsProvider interface\n * that manages setting and getting of AWS Credentials.\n *\n * @throws configuration expections: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n *\n */\nexport const cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\nexport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore };\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, CookieStorage, defaultStorage, } from '@aws-amplify/core';\nimport { parseAmplifyConfig, } from '@aws-amplify/core/internals/utils';\nimport { cognitoCredentialsProvider, cognitoUserPoolsTokenProvider, } from './auth/cognito';\nexport const DefaultAmplify = {\n    /**\n     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n     *\n     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n     *\n     * @example\n     * import config from './amplifyconfiguration.json';\n     *\n     * Amplify.configure(config);\n     */\n    configure(resourceConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourceConfig);\n        // If no Auth config is provided, no special handling will be required, configure as is.\n        // Otherwise, we can assume an Auth config is provided from here on.\n        if (!resolvedResourceConfig.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If Auth options are provided, always just configure as is.\n        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n        if (libraryOptions?.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If no Auth libraryOptions were previously configured, then always add default providers.\n        if (!Amplify.libraryOptions.Auth) {\n            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n            // TODO: allow configure with a public interface\n            libraryOptions?.ssr\n                ? new CookieStorage({ sameSite: 'lax' })\n                : defaultStorage);\n            Amplify.configure(resolvedResourceConfig, {\n                ...libraryOptions,\n                Auth: {\n                    tokenProvider: cognitoUserPoolsTokenProvider,\n                    credentialsProvider: cognitoCredentialsProvider,\n                },\n            });\n            return;\n        }\n        // At this point, Auth libraryOptions would have been previously configured and no overriding\n        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n        if (libraryOptions) {\n            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n            if (libraryOptions.ssr !== undefined) {\n                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n                // TODO: allow configure with a public interface\n                libraryOptions.ssr\n                    ? new CookieStorage({ sameSite: 'lax' })\n                    : defaultStorage);\n            }\n            Amplify.configure(resolvedResourceConfig, {\n                Auth: Amplify.libraryOptions.Auth,\n                ...libraryOptions,\n            });\n            return;\n        }\n        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n        // configured libraryOptions.\n        Amplify.configure(resolvedResourceConfig);\n    },\n    /**\n     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n     * `Amplify.configure`.\n     *\n     * @returns An {@link ResourcesConfig} object.\n     */\n    getConfig() {\n        return Amplify.getConfig();\n    },\n};\n"],
  "mappings": "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",
  "names": ["v", "d", "b", "__assign", "RawSha256", "fromUtf8", "toUtf8", "fromUtf8", "toUtf8", "fromUtf8", "Sha256", "AuthValidationErrorCode", "AuthErrorStrings", "AuthErrorCodes", "name", "AssociateSoftwareTokenException", "ChangePasswordException", "ConfirmDeviceException", "ConfirmForgotPasswordException", "ConfirmSignUpException", "DeleteUserAttributesException", "DeleteUserException", "ForgetDeviceException", "ForgotPasswordException", "GetUserException", "GetIdException", "GetCredentialsForIdentityException", "GetUserAttributeVerificationException", "GlobalSignOutException", "InitiateAuthException", "ResendConfirmationException", "RespondToAuthChallengeException", "SetUserMFAPreferenceException", "SignUpException", "UpdateUserAttributesException", "VerifySoftwareTokenException", "VerifyUserAttributeException", "UpdateDeviceStatusException", "ListDevicesException", "getCurrentUser", "getCurrentUserInternal", "tokenOrchestrator", "getCurrentUser", "tokenOrchestrator", "TokenProviderErrorCode", "createKeysForAuthStorage", "getCurrentUser", "AuthErrorTypes", "logger", "logger", "createKeysForAuthStorage", "logger", "logger", "isAuthenticated"]
}
